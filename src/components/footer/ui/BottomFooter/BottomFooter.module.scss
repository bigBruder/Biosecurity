@use '../../../../app/styles/helpers/variables.scss' as *;
@use '../../../../app/styles/helpers/mixin.scss' as *;
@use '../../../../app/styles/helpers/functions.scss' as func;

.botomFooter {
  @media (min-width: $m-screen) {
    margin-left: func.to-rem(14);
    margin-right: func.to-rem(14);
  }
}

.botomFooterTop {
  @media (min-width: $m-screen) {
    @include flexible(space-between);
    column-gap: func.to-rem(20);
    margin-bottom: func.to-rem(40);
  }
}

.title {
  font-size: func.to-rem(34);
  font-weight: 500;
  line-height: 1;
  margin-bottom: func.to-rem(30);

  @media (min-width: $m-screen) {
    max-width: func.to-rem(454);
    margin-bottom: 0;
  }

  span {
    display: block;

    @media (min-width: $m-screen) {
      display: inline;
    }
  }
}

.form {
  position: relative;
  flex-grow: 1;
  height: func.to-rem(73);
  margin-bottom: func.to-rem(30);

  @media (min-width: $m-screen) {
    height: func.to-rem(61);
    margin-bottom: 0;
  }

  @media (min-width: $lg-screen) {
    max-width: func.to-rem(672);
  }
}

.textArea {
  width: 100%;
  background-color: transparent;
  border: func.to-rem(1) solid $black;
  resize: none;
  padding: func.to-rem(8) func.to-rem(24) func.to-rem(8) func.to-rem(16);
  border-radius: func.to-rem(12);
  height: 100%;
  font-size: func.to-rem(12);
  line-height: 1.4;
  letter-spacing: 0.04em;

  &::placeholder {
    text-transform: uppercase;
    font-weight: 500;
  }
}

.textAreaSubmit {
  position: absolute;
  right: func.to-rem(25);
  top: 50%;
  transform: translateY(-50%);

  svg {
    @media (min-width: $lg-screen) {
      width: func.to-rem(17);
      height: func.to-rem(10);
    }
  }
}

.copyright {
  @include flexible(space-between);
  font-size: func.to-rem(14);
}
